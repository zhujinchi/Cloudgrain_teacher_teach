def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

apply plugin: 'com.android.application'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"

android {
    compileSdkVersion 29

    lintOptions {
        disable 'InvalidPackage'
    }

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId "com.example.Cloudgrain_teacher_teach"
        minSdkVersion 21
        targetSdkVersion 29
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
        multiDexEnabled true
        ndk {
            abiFilters'armeabi-v7a'
        }
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = ["room.schemaLocation": "$projectDir/schemas".toString()]
            }
        }

    }

    buildTypes {
        debug {
            ndk {
                //这里要加上，否则debug包会出问题,后面三个为可选，x86建议加上不然部分模拟器回报错
                abiFilters'armeabi-v7a'
            }
        }
        release {
            ndk{
                abiFilters'armeabi-v7a'
            }
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }


    sourceSets {

        main {
            jniLibs.srcDirs = ['libs']
        }

        test {
            java { srcDirs = ['src/test'] }
        }

    }

    compileOptions {
        sourceCompatibility = 1.8
        targetCompatibility = 1.8
    }
}

repositories {
    flatDir { dirs 'libs' }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'com.android.support:multidex:1.0.3'
    implementation 'androidx.appcompat:appcompat:1.0.2'
    implementation 'com.android.support:cardview-v7:29.0.0'
    implementation 'com.android.support:support-v4:29.0.0'
    implementation 'com.android.support:appcompat-v7:29.0.0'

    implementation project(path: ':MeetingLibrary')
    compile(name: "HkhAndLibrary-release", ext: "aar")
    compile(name: "HttpLibrary-release", ext: "aar")
    compile(name: "CommunicateLibrary-release", ext: "aar")
    implementation 'com.tencent.bugly:crashreport:3.1.0'
    implementation 'com.tencent.bugly:nativecrashreport:3.7.1'
    implementation 'com.squareup.picasso:picasso:2.5.0'
    implementation 'com.blankj:utilcode:1.24.2'
    implementation 'com.jaeger.statusbarutil:library:1.5.1'
    api 'org.greenrobot:eventbus:3.0.0'
    api 'com.squareup.okhttp3:okhttp:3.2.0'
    api 'com.squareup.retrofit2:retrofit:2.1.0'
    api 'com.squareup.retrofit2:converter-scalars:2.0.2'
    api 'com.squareup.retrofit2:converter-gson:2.1.0'
    implementation 'com.github.CymChad:BaseRecyclerViewAdapterHelper:2.9.41'


}

flutter {
    source '../..'
}
